private async Task SetUserCookie(Usuario usuario)
        {
            var claims = new List<Claim>()
            {
                new Claim(ClaimTypes.Name, usuario!.Name!),
                new Claim(ClaimTypes.NameIdentifier, usuario.Id.ToString()),
                new Claim(ClaimTypes.Role, usuario.Rol!.ToString())
            };

            var claimsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
            await HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity));
        }






//configuracion de Cookies, para usuarios y roles
builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(option =>
    {
        option.LoginPath = "/Login/Index";
        option.ExpireTimeSpan = TimeSpan.FromMinutes(30);
        option.AccessDeniedPath = "/Home/Privacy";
    });



app.UseAuthentication();





private async Task subirArchivo(Formulario formulario)
        {
            string wwwRootPath = _webHostEnvironment.WebRootPath;
            string extension = Path.GetExtension(formulario.ArchivoFile!.FileName);
            Guid randomGuid = Guid.NewGuid();
            string nombreArchivo = $"{randomGuid}{extension}";
            formulario.Archivo = nombreArchivo;

            string path = Path.Combine($"{wwwRootPath}/files/", nombreArchivo);
            var fileStream = new FileStream(path, FileMode.Create);
            await formulario.ArchivoFile.CopyToAsync(fileStream);
        }